/* -------------------------------------------------------------------------- */

@import "ember-modal-dialog/ember-modal-structure";
@import "ember-modal-dialog/ember-modal-appearance";

body.ember-application > div.ember-view > div.container
{
    padding-right: 5px;
    padding-left: 5px;
}

body.mapview div#Page-Outer
{
  position: fixed;
  height: 100%;
}
body.mapview div#Page-Nav
{
  position: fixed;
  top: 0;
  height: 69px;
}
body.mapview div#Page-Body
{
  position: fixed; 
  top: 69px;
  bottom: 0;
}

.nav-tabs > li.active > a,
.nav-tabs > li.active > a:hover,
.nav-tabs > li.active > a:focus{
    color: #555555;
    background-color: lightblue;  
} 

/* -------------------------------------------------------------------------- */
/* Make the top (left & right) menus horizontal. */
div#Page-Nav > div > div.navbar > div > div.navbar > ul.nav {
  display: flex;
}

/* -------------------------------------------------------------------------- */

.draw-map-container,
.tabbed-table-container
{
    float: left;
}
.draw-map-container
{
    width: 100%;
}
/* Large desktop */
@media (min-width: 1200px) {
.draw-map-container
{
    width: 100%;
}
}

/* Portrait tablet to landscape and desktop */
@media (min-width: 768px) and (max-width: 979px) {
.draw-map-container
{
    width: 100%;
}
}

/* Landscape phone to portrait tablet */
@media (max-width: 767px) {
}

/* Landscape phones and down */
@media (max-width: 480px) {
}

/* -------------------------------------------------------------------------- */

/* #holder contains the graph (svg);  it is within .draw-map-container */
/* Large desktop */
@media (min-width: 1200px) {
#holder
{
    padding : 50px;
}
}

/* Portrait tablet to landscape and desktop */
@media (min-width: 768px) and (max-width: 979px) {
#holder
{
    padding : 30px;
}
}

/* Landscape phone to portrait tablet */
@media (max-width: 767px) {
}

/* Landscape phones and down */
@media (max-width: 480px) {
}

.devel #holder
{
    padding : inherit;
}
@media (min-height: 600px) and (max-height: 719px) {
  body.devel div#holder {
    height: 410px;
  }
}


/* -------------------------------------------------------------------------- */
/* Handle to resize a panel width. 
 * Used by app/utils/domElements.js : eltWidthResizable() */
.resizer
{
  font-weight: 900;
  font-size: larger;
  float: right;
  margin-right: -6px;
}
.resizer:hover
{
  border: 1px #337ab7 dashed;
  border-radius :  6px;
  padding : 2px 2px;

  font-size: x-large;
  color: #337ab7;  // brand blue;
}
/* This doesn't work within <foreignObject>, so :not(.inFO) is used. */
.resizer:not(.inFO)::after {
/*	â‡¹	8697	21F9	 	LEFT RIGHT ARROW WITH VERTICAL STROKE	*/
  content: "\21F9";
  right: -20px;
  position: relative;
}
/*.foreignObject*/ .resizer.inFO {
  position : inherit;
}
/* This is for ::after content;  position:fixed mostly works, but y position is variable.
.foreignObject .resizer.inFO::after {
  position: fixed;
  right: -25px;
}
 */
.resizer:hover
{
  opacity : 0.7;
  font-weight: 900;
  color: hsl(208, 95%, 52%);	// #337ab7 with increased saturation and luminosity
}
/* The resizer icon is wrapped in div.menuHead : width: 100%, so that it remains
 * under cursor when hover increases parent width.  */
.resizer > .menuHead {
    width: 100%;
}
/* can change this to use .hover-parent, .hover-child  */
.resizer > .subMenu {
    /* position: fixed; */
    display : none;
}
.resizer:hover > .subMenu {
    display : inherit;
}

/* -------------------------------------------------------------------------- */
/* show the child when the parent is hovered */
.hover-parent > .hover-child {
    display : none;
}
.hover-parent:hover > .hover-child {
    display : inherit;
}




/* -------------------------------------------------------------------------- */
#table-brushed
{
overflow-x: scroll;
}
/* -------------------------------------------------------------------------- */

svg {
  font-size: 14px;
  /* this targets an intermittent issue whereby axes in a certain position are not drawn;
   * dragging another stack to that position causes it to dissappear and the other axis to draw ok;
   * slight changes to width cause other stacks to be not drawn.
  */
  width: 99%;
}


.active {
  stroke: #f93;
  /*stroke-width: 2px;*/
}

.map.selected g.axis text {
  font-weight: bold;
}

.map.zoomed g.axis {
    cursor: move;
}

/* ---------------------------------- */

g.axis-use > rect {
  fill: none;
  stroke: blue;
}
g.axis-use > g.tracks > g > rect.track {
  fill: white;
  /* stroke: green; */
}
.pasteData {
  overflow: hidden;
  word-wrap: inherit;
}

/* ---------------------------------- */

/* context is :
g.axis-use 
> g.chart
> g (clip-path)
> g (transform)
> rect.chartRow
*/
rect.chartRow {
  fill: aqua;
  opacity : 0.5;
  stroke: blue;
}

/* ---------------------------------- */

path.chartRow.line
{
      fill : none;
      stroke : magenta;
      stroke-linejoin : round;
      stroke-linecap : round;
      stroke-width : 1.5;
}

circle.radio.toggle.chartType
{
      fill : orchid;
      fill-opacity : 0.2;
      stroke : magenta;
      stroke-width : 2;
}
circle.radio.toggle.chartType.pushed
{
      fill-opacity : 1;
}

/* ---------------------------------- */


/* overflow:scroll within foreignObject works in firefox, not chrome;  see
 * https://stackoverflow.com/questions/34206459/scroll-is-not-working-inside-svg-foreign-object-in-chrome
 *  http://jsfiddle.net/ranr/ncry8Lmx/
 * code.google.com/p/chromium/issues/detail?id=568614
 */
.foreignObject body.axis-table {
    overflow: hidden;
    /* overflow: scroll; */
}
.foreignObject body.axis-table:not(:-moz-handler-blocked) {
    overflow: scroll;
}

g.axis-use.hasChart > g.axis-html > .foreignObject {
    display : none;
}


/* ---------------------------------- */

/* in the panel layout, widen to avoid wrapping the display toggles text.  */
.panel > .panel-body > .bordered.control-panel,
.panel > .panel-body > .bordered.control-panel > div {
  width: 100%;
}
/* ---------------------------------- */

/* These selectors are for HTML and SVG respectively; they are bundled so that
 * the user can easily edit them at the same time, keeping colours in sync.
 * the start of this selector is the same as flowButtonsSel (in utils/draw/flow-controls.js)
 * later will make the palettes user-editable, e.g. https://github.com/bugsnag/chromatic-sass,
 *  https://blog.bugsnag.com/sass-color-palettes
 */
div.drawing-controls.flowButtons .flowButton.alias,
.foreground > g.alias > g > path,
.foreground > g.progress > g.alias > g.blockAdj > g > path {
  /* HTML  */
  border-color : #955;
  background-color: #955;
  /* SVG  */
  stroke: #955;
}
div.drawing-controls.flowButtons .flowButton.U_alias,
.foreground > g.U_alias > g > path,
.foreground > g.progress > g.U_alias > g.blockAdj > g > path {
  border-color : #545;
  background-color: #545;
  stroke: #545;
}
div.drawing-controls.flowButtons .flowButton.direct,
.foreground > g.direct > g > path,
.foreground > g.progress > g.direct > g.blockAdj > g > path
{
  border-color : #484;
  background-color: #484;
  stroke: #484;
}
body.devel .foreground > g > g > path {
  stroke-dasharray: 30 50 calc(var(--path-stroke-width)*10);
  stroke: rgb(50,50,100);
  transform: translate(0px, 5px);
}
body.devel .foreground > g.progress > g > g.blockAdj > g > path {
  stroke-dasharray: 10 40;
  stroke: rgb(100,50,50);
}

.foreground path {
  fill: none;
  stroke: #808;
}
:root {
  --path-stroke-opacity : .125;
  --path-stroke-width: 0.75px;
  --manyPaths-stroke-opacity: calc(var(--path-stroke-opacity)*0.8); //.125;
  --manyPaths-stroke-width: calc(var(--path-stroke-width)*0.8); // 0.75px;
}
.foreground path {
  stroke-opacity: var(--path-stroke-opacity); //.125;
  stroke-width: var(--path-stroke-width); // 0.75px;
}
.manyPaths .foreground path {
    /* Works for Chrome, haven't found a working configuration for Firefox.
  stroke-opacity: var(--manyPaths-stroke-opacity);
  stroke-width: var(--manyPaths-stroke-width);
   */
}

/* or :hover if transition is not required. */
.devel .foreground path.hovered {
    /* was d3:easeElastic */
    transition:
    stroke		800ms ease-in-out,
    stroke-width	800ms ease-in-out,
    stroke-opacity	800ms ease-in-out,
    fill		800ms ease-in-out;

    /* element stroke is set by pathColourUpdate(); override that via !important.  */
    stroke : #880044	!important;
    stroke-width : 6px;
    stroke-opacity : 1;
    fill : none;
}
:root
{
  --faded-stroke-opacity: calc(var(--path-stroke-opacity)*0.7);
}
.foreground .faded path {
  fill: none;
  stroke: #000;
  stroke-width: var(--path-stroke-width);
  stroke-opacity: var(--faded-stroke-opacity);
}

.devel .foreground path {
  stroke-opacity: 1;
  stroke-width: 2px;
}
.foreground path.reSelected
{
    stroke : red;
}
/* this rule targets the legend (html) and the path (svg); different css
 * attributes apply to each; the purpose of combining the rule is to enable a user
 * to easily navigate from the legend to the css rule. */
div#scaffoldLegend > ul > li.scaffoldA,
.foreground path.scaffoldA
{
    /* stroke : red; */
    color : red;
    stroke-dasharray : 1 2 3 4 5;
}
div#scaffoldLegend
{
  float: left;
  margin-right: 1em;
}
div#scaffoldLegend > ul
{
  list-style-type: none;
}
.foreground path.strong
{
    stroke-width : 2px;
    stroke-opacity: 1;
}

/* this is partly a duplicate of a rule below (comment - Brush css style).  Both were added in b637845 (2016 Sep 23)  */
/*.brush .extent {
  fill-opacity: .3;
  stroke: #fff;
  shape-rendering: crispEdges;
}*/

/* If loading all block feature initially, and also pathsProgressive, then
 * differentiate the latter paths with colour and dashes.
 * .devel is also sufficient to engage this functionality because it is
 *  helpful to see the comparison of paths calculated on back- and front- end.
 *
 */
body.devel
 path.blockAdj,
body.allInitially
 path.blockAdj {
  /* emphasise the new (progressive) paths during devel. */
  stroke: red;
  /* stroke-width: 2px; */
  stroke-dasharray: 10 20;
  /* stroke-opacity: 1; */
}


.axis line, .axis path {
  fill: none;
  shape-rendering: crispEdges;
}
.axis line, .axis path:not(.horizTick) {
  stroke: #000; /* black */
}

.axis text {
  text-shadow: 0 1px 0 #fff;
  cursor: move;
  text-anchor: middle;
}
/* since split axis, now have (g.axis-outer (g.axis-all ( g.axis  (g.tick ...))) (text) ... ) */
.axis-outer > .axis-all > text,
.axis-outer .axis > .tick > text {
  text-anchor: middle;
}
.axis-outer.rightmost.not_top > .axis-all > text,
.axis-outer.rightmost .axis > .tick > text {
  text-anchor: start;
}
.axis-outer.leftmost.not_top > .axis-all > text,
.axis-outer.leftmost .axis > .tick > text {
  text-anchor: end;
}
.axis-outer.rightmost .axis > .tick > text {
  transform: translate(18px, 0px);
}
.axis-outer.rightmost .axis > .tick > line {
  transform: translate(6px, 0px);
}


/* -------------------------------------------------------------------------- */
#grid {
    float: right;
    /* padding-right: 100px; */
    padding-bottom: 50px;
    /* margin-left: 10em;	*/
    position:relative;}
.row, .header {
 /* clear: left; */
 font-size: 12px; line-height: 18px; height: 18px;}


/* .row:nth-child(odd) { background: rgba(0,0,0,0.05); } */
.rowstripe:nth-child(odd) {
  background: rgba(0,0,0,0.05);
}

.header { font-weight: bold; }
.cell { float: left; overflow: hidden; white-space: nowrap; width: 180px; height: 18px;}
.col-0 { width: 100x; }

div.colouredFeatures
{
  white-space: pre;
  float: left;
  min-height: 10em;
  min-width: 6em;
}
/* text input box / table.   ember-content-editable */
.colouredFeatures:hover:not(:focus) {
  /* outline: -webkit-focus-ring-color auto 15px; */
  border: pink 3px dashed;
}

div.ExportFlowData
{
    clear: both;
}


/* -------------------------------------------------------------------------- */

/* Brush css style */
.brush .extent {
  stroke: #000;
  fill-opacity: .125;
  shape-rendering: crispEdges;
}
/* the middle g is g[clip-path] */
g.brush:hover > g > rect.handle {
  stroke: blue;
}
g.brush:hover > g > rect.overlay {
    outline: 1px dashed purple; 
    -webkit-tap-highlight-color: rgba(70, 30, 50, 0);
}
g.tick:hover {
    outline: 1px dashed orange; 
}

/* This (stroke colour) was applied for selector .horizTick until 655bfe3
 * introduced axisTitleColour().
 * Alternative to a constant in css, showTickLocations() could use axisName to
 * lookup block index, as in featurePathStroke(), but that may not be more
 * useful, instead perhaps classify in groups, e.g. give each group of added
 * ticks a new id for an ordinal colour scale.
 */
path.horizTick.fromInput
{
    stroke: green;
}
.horizTick
{
  /* stroke (colour) is now provided by axisTitleColour(). */
  stroke-width : 2px;
}
g.foundFeatures > path.horizTick
{
  stroke-width : 3px;
}

path.syntenyEdge
{
  fill-opacity: 0.05;
  fill: magenta;
  stroke: purple;
  stroke-dasharray: 8 4 8 20;
}
path.syntenyEdge.inverted
{
  fill: orangered;
  stroke: orangered;
  stroke-dasharray: 16 8 16 40;
}


/* Button */
.btn { cursor: pointer; }

.btn > rect
{
  width: 60px;
  height: 30px;
  rx: 3px;
  ry: 3px;
  fill: #eee;
  stroke: #ddd;
}
.btn > text
{
  text-anchor: middle;
}


/* Tool tip */
.toolTipChild
{
  max-width: 11em;
  max-height: 20em;
  overflow: auto;
}
div.highlightFeature,
div.toolTip{
  /* seems based on https://github.com/Caged/d3-tip/blob/master/examples/example-styles.css */
  /* position:absolute; */  /* overridden by d3-tip */
  text-align: left;
  padding: 0.5em;
  font: 12px sans-serif;
  background: rgba(255, 255, 255, 0.8); /* dark theme: rgba(0, 0, 0, 0.8) */
  color: #000; /*dark theme:  #fff */
  border: 1px solid lightgrey;
  border-radius: 0.6em;
}
/* from: https://github.com/Caged/d3-tip/blob/master/examples/example-styles.css */
/* Northward tooltips */
.d3-tip.n:after {
  content: "\25BC";
  margin: -1px 0 0 0;
  top: 100%;
  left: 0;
  text-align: center;
}

div.highlightFeature
{
  position:absolute;
  /* height : auto; */
  /* width: auto; */
  opacity:  0.9;
  /* display: inline; */
}

.navbar {
  margin-bottom: 0px;
}

/* -------------------------------------------------------------------------- */
/* target zone for axis stacking drag&drop
 */
/** When dragging, change cursor for all elts other than .current. */
.axisDrag {
    cursor: no-drop;
}
.axisDrag .stackDropTarget.current {
    display : inherit;
}
.dragTransition .stackDropTarget {
    pointer-events: none !important;
}
.stackDropTarget {
    display : none;
    pointer-events: none;
    cursor: copy;

    /* These values are overridden when .current and .dragHover */
    fill: rgba(80, 80, 255, 0.1);
    stroke: rgba(255, 80, 80, 0.4);
    // stroke-width:1px;
    stroke-dasharray: 3,8;
}
.stackDropTarget.current {
    pointer-events: inherit;
    cursor: copy;
}
.stackDropTarget.current.dragHover {
    fill: rgba(80, 80, 255, 0.2);
    stroke: rgba(255, 80, 80, 0.6);
    stroke-dasharray: 2,6;
}

/* -------------------------------------------------------------------------- */
/** Styles for multi-level dropdown
 *  From http://bootsnipp.com/snippets/featured/multi-level-dropdown-menu-bs3 */

.dropdown-submenu {
    position: relative;
}

.dropdown-submenu>.dropdown-menu {
    top: 0;
    left: 100%;
    margin-top: -6px;
    margin-left: -1px;
    -webkit-border-radius: 0 6px 6px 6px;
    -moz-border-radius: 0 6px 6px;
    border-radius: 0 6px 6px 6px;
}

.dropdown-submenu:hover>.dropdown-menu {
    display: block;
}
ul.dropdown-menu[role=menu]
{
    padding-top: 0px;
}
div.btn-group > button.btn.btn-default:hover
{
    font-weight : bold;
}
div.btn-group.open > button.btn.btn-default,
button.btn.btn-default.dropdown-toggle,
li.dropdown-submenu,
ul.dropdown-menu > li.enabled
{
    border-width : 2px;
    background-color: rgba(51, 122, 183, 0.2); /* #337ab7 0.5 opacity*/
}
ul.dropdown-menu :hover,
ul.dropdown-menu > li.enabled > a
{
    font-weight : bold;
}
ul.dropdown-menu
{
    background-color: #fff;
}
ul.dropdown-menu > li > a
{
    opacity : 1;
}
li.dropdown-submenu > ul.dropdown-menu {
  padding-top: 0px;
  padding-bottom: 0px;
  margin-top: -2px;
}

.dropdown-submenu>a:after {
    display: block;
    content: " ";
    float: right;
    width: 0;
    height: 0;
    border-color: transparent;
    border-style: solid;
    border-width: 5px 0 5px 5px;
    border-left-color: #ccc;
    margin-top: 5px;
    margin-right: -10px;
}

.dropdown-submenu:hover>a:after {
    border-left-color: #fff;
}

.dropdown-submenu.pull-left {
    float: none;
}

.dropdown-submenu.pull-left>.dropdown-menu {
    left: -100%;
    margin-left: 10px;
    -webkit-border-radius: 6px 0 6px 6px;
    -moz-border-radius: 6px 0 6px 6px;
    border-radius: 6px 0 6px 6px;
}
/* -------------------------------------------------------------------------- */
/* dataset explorer : filter-group */

.filter-groups {
  margin-top: 1em;
}
.filter-groups > ul {
   list-style-type: none;
   padding-left: 0px;
}
.filter-groups > ul > li {
  margin-top: 1em;
}
li.filter-group > div > span {
  margin: 0 0.5em;
}
li.filter-group > div > span:first-child {
  margin-left : 0;
}
li.filter-group > div > span:last-child {
  margin-right : auto;
}
.filter-groups > ul > li > div > input[name=detailed] {
  float: left;
}
.filter-groups > ul > li > div > button.btn {
  padding: 3px 6px;
  margin: 0.5em 1em;
}
.filter-group > div > button.delete {
  float: right;
}

.line-input-label > input {
    margin-left : 1.2em;
}

/* dataset explorer : tree browser */

#tab-explorer-parent  ul {
  /* there is enough indent in the li, so 0 is enough here. */
  -webkit-padding-start: 0px;
}
#tab-explorer-parent > ul {
  /* no padding here because it will be white, unlike the list. */
  -webkit-padding-start: 0px;
}
#left-panel-explorer div.tab-content ul ul {
  padding-left: 0px;
}
#left-panel-explorer div.tab-content > div > ul > li {
  padding-left: 5px;    /* reduced from 15px */
}

li > span.blockInScope
{
  display: none;
}
li:hover > span.blockInScope
{
  display: inherit;
  margin-left: 1em;
}

/* <li>-s with .active-detail contain a <div> with additional detail, e.g. a count,
 * which is displayed when active */
li.active-detail {
  display:flex;
}
li.active-detail > div {
  display: none;
}
li.active-detail.active > div {
  display: inherit;
  text-align: right;
  margin-right: 0.5em;
}

/* (in e.g. data explorer) tabs have counts shown when active; best displayed
 * below the tab so use display:block.  */
ul.li-active-extra > li.active-detail.active {
  display: block;
}

#left-panel-explorer > div > .panel > div > ul.nav > li {
  border: 1px solid #ccc;
  border-radius: 10px 10px 3px 3px;
}

#left-panel-explorer > div > .panel > div > ul.nav > li.active {
  border-bottom : none;
}

div#tab-explorer-datasets > ul.list-group > div.ember-view > li.list-group-item 
{
  display: inline-block;
}

#left-panel-explorer .list-group-item {
  /* The purpose of this is to maintain relatively straight columns of block elements.
   * Users are free to create longer block names; handling all of that variation
   * would require some calculation or user adjustment.
   * This value works OK for each of the manage-explorer tabs, for block names/scopes
   * which are generally 2-3 chars, e.g. 7A, or 1D2.  Element width also varies when
   * the block is added / selected. */
  min-width: 7.48em;
}

.entryClass0 {
  background-color : #9bc2e433;
}
.entryClass1 {
  /* background-color : #eee; */
}

div#tab-explorer-datasets  .list-group-item
{
  margin-right: -0.27em;
}
/* whitespace between </li><li> in the generated html is allocated about 1/3 em of white space.
 * One way to suppress that is with negative margin, as is done in the preceding rule.
 * The background-color of .entryClass0 has <1 opacity, so if the element
 * overlaps too much, it produces a faint darker line.  This makes this method
 * fairly fragile - -0.3 overlaps too much, whereas -0.25 leaves a white gap.
 *
 * Alternatively : applying { display : table } to the parent of the
 * li.list-group-item works well :
div#tab-explorer-datasets > ul.list-group > div
{
  display: table;
}
 */


/* .panel-primary defines a blue (#337ab7) border which is being eclipsed by
 * child elements, in particular the div.tab-explorer-datasets.  Defining some
 * side margin prevents this, but it is not needed by .panel-header, so a better
 * fix would be to work out which child elements are eclipsing the parent border
 * and fix that instead.
 */
#left-panel-explorer > div > div.panel.panel-primary > div
{
  margin-left: 1px;
  margin-right: 4px;
}

/* -------------------------------------------------------------------------- */
div.drawing-controls > div.drawing
{
  margin-top: 0.5em;
  margin-bottom: 1em;
}
.maps-aligned
{
  margin-right: 8em;
}
div.drawing-controls > div > ul.dropdown-menu
{
  padding-right: 2em;
}
div.drawing-controls > div > a.dropdown-toggle,
div.drawing-controls > div > a.dropdown-toggle:hover
{
  text-decoration-line: none;
}
div.drawing-controls > div.dropdown:hover > ul.dropdown-menu
{
  display: block;
}
div.drawing-controls > div > ul > li
{
  margin-left: 1em;
}
div.drawing-controls > div > ul > li > label
{
  max-width: 85%;
  margin-right: 1em;
}
.vspace1 > div
{
  margin: 0.8em 0;
}
.bordered
{
  /* colour is based on the Draw-Map button colour, rgba(51, 122, 183, 0.2), with increased luminance and reduced opacity */
  border: 5px solid hsla(208, 56%, 55%, 0.10);
}
.border-top-none
{
  border-top : 0px;
}
.control-panel
{
  padding: 1em;
}
/* -------------------------------------------------------------------------- */
/** style the flow control buttons in  div.drawing-controls */
div.drawing-controls.flowButtons .flowButton
{
  float: left;
  width: 2em;
  height: 2em;
  margin: 0px 5px;

  border-radius: 1em;
  border-width: 10px;
  /* border-style: dashed; */
}
div.drawing-controls.flowButtons .flowButton.selected
{
  border-width: 8px;
  /* border-style: solid; */
  border-radius: 0px;
}
/* -------------------------------------------------------------------------- */
/* style the flowButtons popover menu */
div.drawing-controls.flowButtons div.popover > button
{
  width: 100%;
}

/* -------------------------------------------------------------------------- */
/* for selected-features.hbs : clearScaffoldColours, flipRegion, (could exclude last child : resetZooms) */
.btn-group.space-between > button {
  margin-right: 1em;
}
/* -------------------------------------------------------------------------- */

input#checkbox-toggleShowAll,
input#range-pathOpacity,
input#range-pathWidth
{
/*
  width: 10em;
  display: inline-block;
  margin-left: 1em;
*/
}
.input-range-group > div > input
{
  display : inline-block;
  width : auto;
  margin-left: 1em;
  float: right;
}
.btn-group
{
  /* modifier is too generic */
  /* margin-right: 2.5em; */
}
/* @see setupToggle(), setupToggleModePublish() */
input#checkbox-toggleShowAll,
#checkbox-toggleModePublish
{
}

svg > g.publishMode .btn
{
  display: none;
}

/* -------------------------------------------------------------------------- */
#choose_path_colour_scale
{
  border-bottom: 0px;
  border-right: 0px;
}

#choose_path_colour_scale > table > tr > th,
#choose_path_colour_scale > table > tr > td
{
  padding: 0 1em;
}
/* -------------------------------------------------------------------------- */
.actual-row
{
  width:100%;
  margin-top: 20px;
  margin-bottom: 10px;
}

ul#maps_aligned > li.selected,
ul#display-blocks > li.selected,
#observational-table th span.selected {
  font-weight: bold;
}

g.axis-outer.selected /* > g.axis-all > g.axis > */ text {
  font-weight: bold;
}
/* hover menu for axis title or sub-title
 * configureAxisSubTitleMenu() has a long title, so centre the buttons.
 */
div.popover/*.axis-menu*/ div.popover-content {
  text-align: center;   /* equiv bootstrap .text-center */
}
/* -------------------------------------------------------------------------- */
/* for controlling display of devel monitoring info. */
.devel-visible
{
    display : none;
}
.devel .devel-visible
{
    display : inherit;
}
.devel-visible
{
  height: 65px;
  overflow-y: scroll;
}

/* -------------------------------------------------------------------------- */
/* for controlling display of (left panel : view) "Chart Options". */
.chart-options
{
    display : none;
}
.chartOptions .chart-options
{
    display : inherit;
}
/* -------------------------------------------------------------------------- */
/* for controlling display of width resizer in split axis. */
.axis-use .resizer
{
    display : none;
}
.axis2dResizer .axis-use .resizer
{
    display : inherit;
}
/* -------------------------------------------------------------------------- */
/* When the feature flag (ff) alpha is not defined, don't display the elements with class ff-alpha.  */
body div > ul > li > div > div.btn-group.ff-alpha,
.ff-alpha
{
    display : none;
}
body.alpha .ff-alpha
{
    display : inherit;
}
/* -------------------------------------------------------------------------- */
.goto-feature-range
{
    display : none;
}
.gotoFeature .goto-feature-range
{
    display : inherit;
}
/* -------------------------------------------------------------------------- */
div#goto-feature > div
{
    display : inline-block;
}
.tooltip-inner  /*.ember-popover*/
{
  background-color : #f2f2f2;
  color: #000;
}

/* -------------------------------------------------------------------------- */

/* match the color of .nav-tabs */
.feature-list > hr {
  border-top-color: #ddd;
}
.feature-list > ul.nav.nav-tabs > li > a {
  float: left;
  margin: 3px;
}
.feature-list > ul.nav.nav-tabs > li:not(.active) > div {
    display : none;
}
.feature-list > ul.nav.nav-tabs > li > div {
  float: right;
}

/* -------------------------------------------------------------------------- */

.panel-collapse-button {
  padding:0 5px 0 5px;
  border-radius:0;
  z-index: 50;
}

#matrix-view {
  display: flex;
  width: 100%;
  height: 100%;
}

#observational-table {
  flex: 1;
}

#observational-table .head {
  transform: rotate(90deg);
}

.truncate {
  overflow-wrap: break-word;
  /*white-space: nowrap;*/
  overflow: hidden;
  /*text-overflow: ellipsis;*/
  display:inline-block;
  vertical-align: middle;
  padding-left: 20px;
  padding-right: 10px;
  text-indent: -10px;
}
/* -------------------------------------------------------------------------- */
/* manage-explorer */
/* see also '#tab-explorer-parent' above - combine these when split out. */

/* this will be provided by bootstrap v4 */
li.d-inline-block {
  display: inline-block;
}
ul.borderless li
{
  border: none;
}

div#tab-explorer-parent > ul > li > ul > li > ul > li {
  background-color: inherit;
}



/* -------------------------------------------------------------------------- */
div#left-panel > ul
{
  display : block;
}

div#left-panel-view > div > div > div > ul > li > div
{
  overflow-wrap: break-word;
  text-indent: 1em;
}
div#left-panel-view > div > div > div > ul > li > div > button
{
    float : left;
}

.feature-list.active-input > div > div > div.from-input > a {
    background-color : #e8e8f7;
}
.feature-list:not(.active-input) > div > div > div:not(.from-input) > a {
    background-color : #e8e8f7;
}
.feature-list > div > span {
  margin-right: 2em;
}
.feature-list > div > textarea {
    height: 28ex;     /* approx 2.5ex per line */
}
/* -------------------------------------------------------------------------- */
/* applies in this context :
 * div#left-panel-feature-search > div > div > div.ember-popover
 */
ul.feature-found {
  height: 28ex;
  overflow-y: auto;
}
/* could use .list-unstyled, but it implies padding-left:0 */
ul.feature-found
{
  list-style-type: none;
  text-align : left;
}
ul.feature-found
{
  overflow-y: auto;
  /* override user-agent stylesheet (Chrome) */
  -webkit-padding-start: inherit;
  /* target badge may be close to left so leave a margin for clipping.  */
  margin-left: 2em;
  height: auto;
  max-height: 15ex;
}
ul.blocks-found > li > div > div.ember-popover {
  padding: 3px 5px;
}
/* -------------------------------------------------------------------------- */
/* JSON editor, in RHS panel */

div.metaeditor-panel div.jsoneditor-menu {
  display: none;
}
/* -------------------------------------------------------------------------- */